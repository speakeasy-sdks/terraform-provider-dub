// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RateLimitExceededCode - A short code indicating the error code returned.
type RateLimitExceededCode string

const (
	RateLimitExceededCodeRateLimitExceeded RateLimitExceededCode = "rate_limit_exceeded"
)

func (e RateLimitExceededCode) ToPointer() *RateLimitExceededCode {
	return &e
}
func (e *RateLimitExceededCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limit_exceeded":
		*e = RateLimitExceededCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RateLimitExceededCode: %v", v)
	}
}

type RateLimitExceededError struct {
	// A short code indicating the error code returned.
	Code RateLimitExceededCode `json:"code"`
	// A link to our documentation with more details about this error code
	DocURL *string `json:"doc_url,omitempty"`
	// A human readable explanation of what went wrong.
	Message string `json:"message"`
}

func (o *RateLimitExceededError) GetCode() RateLimitExceededCode {
	if o == nil {
		return RateLimitExceededCode("")
	}
	return o.Code
}

func (o *RateLimitExceededError) GetDocURL() *string {
	if o == nil {
		return nil
	}
	return o.DocURL
}

func (o *RateLimitExceededError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

type RateLimitExceeded struct {
	Error RateLimitExceededError `json:"error"`
}

func (o *RateLimitExceeded) GetError() RateLimitExceededError {
	if o == nil {
		return RateLimitExceededError{}
	}
	return o.Error
}
